From akash
<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2014 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product description template
 *
 * @see Mage_Catalog_Block_Product_View_Description
 */
?>
<?php $_description = $this->getProduct()->getDescription(); ?>
<?php if ($_description): ?>
    <h2><?php echo $this->__('Details') ?></h2>
    <div class="std">
        <?php //echo $this->helper('catalog/output')->productAttribute($this->getProduct(), $_description, 'description') ?>
        <div class="columns pdlarge-8 pdportrait-7">
  			<div class="product_details_container">
    			<div class="general_details">
      				<h6 class="product_heading">PRODUCT DETAILS</h6>
      				<!-- <hr>-->
      				<table cellspacing="0" class="product_details">
				          <tr>
				            <td class="left_row">Stock Number</td>
				            <td class="border_bottom70" style="padding-left: 5px;"><?php echo $this->getProduct()->getDescription();?></td>
				          </tr>
				          <tr>
				            <td class="left_row">Metal/Purity</td>
				            <td class="border_bottom70" style="padding-left: 5px;"><span id="desc-gold-purity"></span> Kt <span id="desc-gold-color"></span> Gold</td>
				          </tr>
				          <tr>
				            <td class="left_row">Approximate Metal Weight</td>
				            <td class="border_bottom70" style="padding-left: 5px;"><?php echo $this->getProduct()->getGoldweight();?> gms</td>
				          </tr>
      				</table>
    				<!-- <hr> -->
  				</div>

  				<!-- Initial rendering of html markup using rails -->
  				<?php
                    $diamondRates = $this->getProduct()->getRates();
                    $diamondWeight = 0;
                    $diamondCount = 0;
                    $daimondRatesArray = explode(',',$diamondRates);
                    foreach ($daimondRatesArray as $daimondRate) {
                        $diamondRateArray = explode('|', $daimondRate);
                        
                        $rateArray = explode('-', $diamondRateArray[0]);
                        $diamondCount += $rateArray[1];
                        $diamondWeight += $rateArray[2];
                    }
					
                ?>
  				<div ng-hide="1" class="diamond_details ng-hide" aria-hidden="1">
    				<h6 class="details_heading">DIAMOND DETAILS</h6>
    				<!-- <hr> -->
    				<div class="details_container">
      					<table cellspacing="0" class="product_details_price_breakup">
        					<tr style="width: 33%">
						            <td class="detail_text border_bottom">Total Diamond(s)</td>
						            <td class="border_bottom70"><?php echo $diamondCount;?></td>
							</tr>
							<tr>		
									<td class="detail_text border_bottom">Diamond Weight</td>
									<td class="border_bottom70"><?php echo $diamondWeight;?>&nbsp;ct</td>						        
        					</tr>
        					<tr>					            
					            <td class="detail_text">Diamond Quality</td>
					            <td class="border_bottom70"><span id="desc-diamond-purity"></span></td>
        					</tr>
      					</table>
    				</div>
    				<!-- <hr> -->
  				</div>

  				<!-- Initial rendering of html markup using rails -->
  				<?php
                    $stoneRates = $this->getProduct()->getStonerates();
                    $stoneWeight = 0;
                    $stoneCount = 0;
                    $stoneRatesArray = explode(',',$stoneRates);
                    foreach ($stoneRatesArray as $stoneRate) {
                        $stoneRateArray = explode('|', $stoneRate);
                        
                        $stoneArray = explode('-', $stoneRateArray[0]);
                        $stoneCount += 1;
                        $stoneWeight += $stoneArray[1];
                    }
                ?>
  				<div ng-hide="1" class="diamond_details ng-hide" style="padding: 2px" aria-hidden="1">
    				<h6 class="details_heading">STONE DETAILS</h6>
    				<!-- <hr> -->
    				<div class="details_container">
					
      					<table cellspacing="0" class="product_details_price_breakup">
        					<tr style="width: 33%">
						            <td class="detail_text border_bottom" >Total Stone(s)</td>
						            <td class="border_bottom70" ><?php echo $stoneCount;?></td>									
        					</tr>
        					<tr>					          						           					           
					            <td class="detail_text" >Stone Weight</td>
					            <td class="border_bottom70"><?php echo $stoneWeight;?>&nbsp;ct</td>					            
        					</tr>
						</table>	
      					</div>

    				</div>
    				<!-- <hr> -->
  				


    			<div ng-hide="1" class="general_details ng-hide" aria-hidden="1">
      				<h6 class="details_heading">PRICE BREAKUP</h6>
      				<!-- <hr> -->
        			<table cellspacing="0" class="product_details_price_breakup">
          				<tbody>
          					<tr class="pd heading">
            					<td class="detail_text" style="width: 33%">Component</td>
            					<td>Rate</td>
            					<td>Weight</td>
            					<td>Value</td>
          					</tr>
              				<tr>
                				<td class="detail_text pb_heading">Gold - <span id="breakup-gold-purity"></span> Kt <span id="breakup-gold-color"></span> Gold</td>
                				<td>Rs. <span id="breakup-gold-rate-per-gm"></span>/gm</td>
                				<td><?php echo $this->getProduct()->getGoldweight();?> gms</td>
                				<td>Rs. <span id="breakup-gold-rate">6,270</span></td>
              				</tr>
							
				              <tr>
				                <td colspan="4" class="detail_text pb_heading">Diamonds</td>
				              </tr>
				              <tr>
							
							
							
                      <?php
                        $diamondRates = $this->getProduct()->getRates();
                        $daimondRatesArray = explode(',',$diamondRates);
                        foreach ($daimondRatesArray as $daimondRate) {
                            $diamondRateArray = explode('|', $daimondRate);
                            foreach ($diamondRateArray as $diamondCertificateString) {
                              $rateArray = explode('-', $diamondCertificateString);
                              $finalRateArrayFromRates[$rateArray[0]]['number'] = $rateArray[1];
                              $finalRateArrayFromRates[$rateArray[0]]['weight'] = $rateArray[2];
                            }
                        }
                        $diamondRateIds = $this->getProduct()->getRateids();
                        $rateCount = 0;
                        $daimondRateIdsArray = explode(',',$diamondRateIds);
                        foreach ($daimondRateIdsArray as $daimondRate) {
                            $diamondRateArray = explode('|', $daimondRate);
                            $rateIdCount = 0;
                            foreach ($diamondRateArray as $diamondCertificateString) {
                              $rateArray = explode('-', $diamondCertificateString);
                              $rateIds[$rateIdCount] = $rateArray[0];
                              $ratedIdsPrice[$rateArray[0]] = $rateArray[2];
                              $ratedIdsCertificates[$rateArray[1]] .= $rateArray[0].',';
                              $rateIdCount++;
                            }
                            $individualRateCollection = Mage::getModel('rates/rates')->getCollection()->addFieldToFilter('rate_id', array('in' => $rateIds));
                            $individualRateCollection->getSelect()->join( array('certificates'=> 'certificates'), 'certificates.certificate_id = main_table.certificate', array('certificates.certificate'));
                            $individualRateCollection->getSelect()->join( array('shapes'=> 'shapes'), 'shapes.shape_id = main_table.shape', array('shapes.shape'));
                            $individualRateData = $individualRateCollection->getData();
                            foreach ($individualRateData as $individualRateDataArray) {
                              $finalRateArray[$individualRateDataArray['rate_id']] = $individualRateDataArray;
                              $finalRateArray[$individualRateDataArray['rate_id']]['cost'] = $ratedIdsPrice[$individualRateDataArray['rate_id']];
                            }
                        }

						//echo "<pre>";print_r($finalRateArray);//exit;
                        foreach ($ratedIdsCertificates as $key => $value) {
                            $valueArray = explode(',', $value);
                            $valueofCertificate = '';
                            foreach ($valueArray as $valueArrayValues) {
                              $valueofCertificate .= $finalRateArray[$valueArrayValues]['shape'].'-'.$finalRateArray[$valueArrayValues]['rate'].'-'.$finalRateArray[$valueArrayValues]['cost'].'-'.$finalRateArrayFromRates[$valueArrayValues]['number'].'-'.$finalRateArrayFromRates[$valueArrayValues]['weight'].',';
                            }
                          ?>
                            <input type="hidden" id="<?php echo $key;?>" name="<?php echo $key;?>" value="<?php echo $valueofCertificate;?>"></input>  
                        <?php
                        }

                        $valueofCertificateArray = explode(',', $valueofCertificate);
                        $count = 0;
                        foreach ($valueofCertificateArray as $valueofCertificateArrayValue) {
                          if(strlen($valueofCertificateArrayValue) != 4 && strlen($valueofCertificateArrayValue) != 0) {
                            ?>
                            <tr>
                              <?php
                              $valueofCertificateArrayValueArray = explode('-', $valueofCertificateArrayValue);
                              ?>
                                <td class="td1"><span id="diamond-table-certificate-<?php echo $count;?>"><?php echo $key;?></span> <span id="diamond-table-shape-<?php echo $count;?>"><?php echo $valueofCertificateArrayValueArray[0]; ?></span> - <span id="diamond-table-number-<?php echo $count;?>"><?php echo $valueofCertificateArrayValueArray[3];?></span> Nos.</td>
                                <td>Rs. <span id="diamond-table-rate-<?php echo $count;?>"><?php echo $valueofCertificateArrayValueArray[1];?></span>/ct</td>
                                <td><span id="diamond-table-weight-<?php echo $count;?>"><?php echo $valueofCertificateArrayValueArray[4];?></span> ct</td>
                                <td>Rs. <span id="diamond-table-cost-<?php echo $count;?>"><?php echo $valueofCertificateArrayValueArray[2];?></span></td>
                            </tr>
                              <?php
                              $count++;
                          }
                        }
                      ?>


                      <tr>
                        <td colspan="4" class="pb_heading">Gemstones</td>
                      </tr>

                      <?php
                        $stoneRates = $this->getProduct()->getStonerates();
                        $stoneCount = 0;
                        $stoneRatesArray = explode(',',$stoneRates);
                        foreach ($stoneRatesArray as $stoneRate) {
                            $stoneRateArray = explode('-', $stoneRate);
                            $finalStoneRateIdArray[$stoneCount] = $stoneRateArray[0];
                            $finalStoneRateWeightArray[$stoneRateArray[0]] = $stoneRateArray[1];
                            $stoneCount++;
                        }

                        $stoneRateCollection = Mage::getModel('stone/stones')->getCollection()->addFieldToFilter('stone_id', array('in' => $finalStoneRateIdArray));
                        $stoneRateData = $stoneRateCollection->getData();

                        foreach ($stoneRateData as $stoneRateDataArray) {
                          $finalStoneRateArray[$stoneRateDataArray['stone_id']] = $stoneRateDataArray;
                          $finalStoneRateArray[$stoneRateDataArray['stone_id']]['weight'] = $finalStoneRateWeightArray[$stoneRateDataArray['stone_id']];
                        }
                        
                        foreach ($finalStoneRateArray as $finalStoneRate) {
                            ?>
                            <tr>
                                <td class="td1"><span id="stone-table-name"><?php echo $finalStoneRate['name'];?></span></td>
                                <td>Rs. <span id="stone-table-rate"><?php echo $finalStoneRate['rate'];?></span>/ct</td>
                                <td><span id="stone-table-weight"><?php echo $finalStoneRate['weight'];?></span> ct</td>
                                <td>Rs. <span id="stone-table-cost"><?php echo $finalStoneRate['weight']*$finalStoneRate['rate'];?></span></td>
                            </tr>
                          <?php
                        }
                        ?>
						
						
				            <tr>
				               <td class=" detail_text pb_heading">Labor Charges</td>
				               <td></td>
				               <td></td>
				               <td>Rs. <span id="breakup-labor-charges"></span></td>
				            </tr>
              				<tr>
                				<td class="detail_text pb_heading">VAT</td>
                				<td></td>
                				<td></td>								
                				<td>Rs. <span id="breakup-vat-charges"></span></td>
              				</tr>
      					</tbody>
      				</table>
      				<!-- <hr> -->
				
    			</div>
			</div>
		</div>
    </div>
<?php endif; ?>


<script type="text/javascript">
            $$('input[type="radio"]:checked').each(function(c){
                
                var elm = document.getElementById(c.id);
                var elmPrice = elm.getAttribute('PRICE');
                var elmOptionCategory = elm.getAttribute('OPTIONCATEGORY');

                if(elmOptionCategory == 'Gold Purity') {
                    labelElmId = 'label_'+c.id;
                    var a = document.getElementById(labelElmId).innerHTML;
                    if (a == '14K') {
                        document.getElementById('desc-gold-purity').innerHTML = '14';
                        document.getElementById('breakup-gold-purity').innerHTML = '14';

                    		var goldRate14KElm = document.getElementById('goldRate14K');
                    		var goldRate14K = Number(goldRate14KElm.value);
                    		document.getElementById('breakup-gold-rate-per-gm').innerHTML =goldRate14K;

                    } else {
                        document.getElementById('desc-gold-purity').innerHTML = '18';
                        document.getElementById('breakup-gold-purity').innerHTML = '18';

                    		var goldRate18KElm = document.getElementById('goldRate18K');
                    		var goldRate18K = Number(goldRate18KElm.value);
                    		document.getElementById('breakup-gold-rate-per-gm').innerHTML =goldRate18K;
                    
                    }
					
					document.getElementById('breakup-gold-rate').innerHTML = document.getElementById('goldprice').innerHTML;
                }
                
                if(elmOptionCategory == 'Gold Color') {
                    labelElmId = 'label_'+c.id;
                    var a = document.getElementById(labelElmId).innerHTML;
                    document.getElementById('desc-gold-color').innerHTML = a;
                    document.getElementById('breakup-gold-color').innerHTML = a;
                }

                if(elmOptionCategory == 'Diamond Color & Purity') {
                    labelElmId = 'label_'+c.id;
                    var a = document.getElementById(labelElmId).innerHTML;
                    document.getElementById('desc-diamond-purity').innerHTML = a;

                    var element1String = "diamond-table-certificate-";
                    var element2String = "diamond-table-shape-";
                    var element3String = "diamond-table-number-";
                    var element4String = "diamond-table-rate-";
                    var element5String = "diamond-table-weight-";
                    var element6String = "diamond-table-cost-";

                    var diamondTableString = document.getElementById(a).value;
                    var diamondTableRow = diamondTableString.split(",");
                    for (i = 0; i < diamondTableRow.length; i++) {
                      if (diamondTableRow[i] != '----') {
                        if (diamondTableRow[i] != '') {
                          var diamondTableCells = diamondTableRow[i].split("-");
                          var element1Str = element1String+i;
                          document.getElementById(element1Str).innerHTML = a;
                          var element2Str = element2String+i;
                          document.getElementById(element2Str).innerHTML = diamondTableCells[0];
                          var element3Str = element3String+i;
                          document.getElementById(element3Str).innerHTML = diamondTableCells[3];
                          var element4Str = element4String+i;
                          document.getElementById(element4Str).innerHTML = diamondTableCells[1];
                          var element5Str = element5String+i;
                          document.getElementById(element5Str).innerHTML = diamondTableCells[4];
                          var element6Str = element6String+i;
                          document.getElementById(element6Str).innerHTML = diamondTableCells[2];
                        } 
                      }
                    }
                }
                
                document.getElementById('breakup-labor-charges').innerHTML = document.getElementById('laborprice').innerHTML;
                document.getElementById('breakup-vat-charges').innerHTML = document.getElementById('vatprice').innerHTML;

            });
</script>
